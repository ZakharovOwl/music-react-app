{"version":3,"sources":["components/Player.jsx","components/Song.jsx","components/LibrarySong.jsx","components/Library.jsx","components/Nav.jsx","data.js","App.js","reportWebVitals.js","index.js"],"names":["Player","currentSong","isPlaying","setIsPlaying","audioRef","setSongInfo","songInfo","songs","setSongs","setCurrentSong","activeLibraruHandler","nextPrev","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","diraction","a","currentIndex","findIndex","length","current","play","trackAnim","transform","animationPercentage","className","currentTime","style","background","color","min","max","duration","value","onChange","e","target","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","src","cover","alt","name","artist","LibrarySong","songSelectHandker","selectedSong","filter","state","Library","libraryStatus","setLibraryStatus","Nav","faMusic","chilllHop","audio","uuidv4","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","songEndHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5020888e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n//import { playAudio } from \"../util\";\r\n\r\nconst Player = ({\r\n  currentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  audioRef,\r\n  setSongInfo,\r\n  songInfo,\r\n  songs,\r\n  setSongs,\r\n  setCurrentSong,\r\n}) => {\r\n\r\n  \r\n\r\n  // fnc use every time when [currentSong] change\r\n  const activeLibraruHandler = (nextPrev) => {\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === nextPrev.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return { ...song, active: false };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n  };\r\n\r\n  //EVENTS\r\n  //pause/play\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n  //input value\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n\r\n  //skip track\r\n\r\n  const skipTrackHandler = async (diraction) => {\r\n    let a; //index\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (diraction === \"skip-back\") {\r\n      if (currentIndex === 0) {\r\n        a = songs.length - 1;\r\n        await setCurrentSong(songs[a]);\r\n        activeLibraruHandler(songs[a])\r\n      } else {\r\n        a = currentIndex - 1;\r\n        await setCurrentSong(songs[a]);\r\n        activeLibraruHandler(songs[a])\r\n      }\r\n    } else if (diraction === \"skip-next\") {\r\n      if (currentIndex === songs.length - 1) {\r\n        a = 0;\r\n        await setCurrentSong(songs[a]);\r\n        activeLibraruHandler(songs[a])\r\n      } else {\r\n        a = currentIndex + 1;\r\n        await setCurrentSong(songs[a]);\r\n        activeLibraruHandler(songs[a])\r\n      }\r\n    }\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n  //add the styles\r\n  const trackAnim = {\r\n    transform: `translateX(${songInfo.animationPercentage}%)`,\r\n  };\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <div\r\n          style={{\r\n            background: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`,\r\n          }}\r\n          className=\"track\"\r\n        >\r\n          <input\r\n            min={0}\r\n            max={songInfo.duration || 0}\r\n            value={songInfo.currentTime}\r\n            onChange={dragHandler}\r\n            type=\"range\"\r\n          />\r\n          <div style={trackAnim} className=\"animate-track\"></div>\r\n        </div>\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-back\")}\r\n          className=\"skip-back\"\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"play\"\r\n          size=\"2x\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-next\")}\r\n          className=\"skip-forward\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\n\r\n\r\nconst Song = ({ currentSong }) => {\r\n  return (\r\n    <div className=\"song-container\">\r\n      <img src={currentSong.cover} alt={currentSong.name} />\r\n      <h2>{currentSong.name}</h2>\r\n      <h3>{currentSong.artist}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","import React from \"react\";\r\n//import { playAudio } from \"../util\";\r\n\r\n\r\nconst LibrarySong = ({\r\n  song,\r\n  setCurrentSong,\r\n  songs,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  id,\r\n}) => {\r\n  const songSelectHandker = async () => {\r\n    const selectedSong = songs.filter((state) => state.id === song.id);\r\n    await setCurrentSong(selectedSong[0]);\r\n    // add Active state\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return { ...song, active: false, };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n     //check if the song is plaing\r\n     if(isPlaying) audioRef.current.play()\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={songSelectHandker}\r\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\r\n    >\r\n      <img src={song.cover} alt={song.name} />\r\n      <div className=\"song-decription\">\r\n        <h3>{song.name}</h3>\r\n        <h4>{song.artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n","import React from \"react\";\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\nconst Library = ({ setCurrentSong, songs, audioRef, isPlaying, setSongs,libraryStatus, setLibraryStatus }) => {\r\n  return (\r\n    <div className={`library ${libraryStatus ? 'library-active' : ''}`}>\r\n      <h2>Library</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            isPlaying={isPlaying}\r\n            setCurrentSong={setCurrentSong}\r\n            audioRef={audioRef}\r\n            song={song}\r\n            songs={songs}\r\n            setSongs={setSongs}\r\n            id={song.id}\r\n            key={song.id}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","import React from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faMusic} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Nav = ({libraryStatus, setLibraryStatus}) =>{\r\n    return(\r\n        <nav>\r\n            <h1>Waves</h1>\r\n            <button onClick={()=>setLibraryStatus(!libraryStatus)}>\r\n                Library\r\n                <FontAwesomeIcon icon={faMusic} />\r\n            </button>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import {v4 as uuidv4} from \"uuid\";\r\n\r\nfunction chilllHop() {\r\n    return[\r\n        {\r\n            name: 'The End',\r\n            cover:'https://chillhop.com/wp-content/uploads/2020/10/efaa848553d09b4d9fc0752844456e41b34de276-1024x1024.jpg',\r\n            artist: 'Philanthrope, Fujitsu',\r\n            audio:'https://mp3.chillhop.com/serve.php/?mp3=8518',\r\n            color: ['#5664b5','#e8bb84'],\r\n            id:uuidv4(),\r\n            active: true,\r\n        },\r\n        {\r\n            name: 'Under the City Stars',\r\n            cover:'https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg',\r\n            artist: 'Aso, Middle School, Aviino',\r\n            audio:'https://mp3.chillhop.com/serve.php/?mp3=10074',\r\n            color: ['#02283a','#fcbf70'],\r\n            id:uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: 'Fox',\r\n            cover:'https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg',\r\n            artist: 'Swørn',\r\n            audio:'https://mp3.chillhop.com/serve.php/?mp3=9224',\r\n            color: ['#b83674','#733469'],\r\n            id:uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: 'Train Ride',\r\n            cover:'https://chillhop.com/wp-content/uploads/2020/09/09fb436604242df99f84b9f359acb046e40d2e9e-1024x1024.jpg',\r\n            artist: 'Nymano, Philanthrope',\r\n            audio:'https://mp3.chillhop.com/serve.php/?mp3=10140',\r\n            color: ['#564f81','#906a91'],\r\n            id:uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: 'Snug',\r\n            cover:'https://chillhop.com/wp-content/uploads/2020/05/be399329e137d6d507393565bacd8e9193c44b07-1024x1024.jpg',\r\n            artist: 'Aso',\r\n            audio:'https://mp3.chillhop.com/serve.php/?mp3=8567',\r\n            color: ['#250e27','#e58285'],\r\n            id:uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: 'Cambria',\r\n            cover:'https://chillhop.com/wp-content/uploads/2020/07/50758f405d2aba9cd6e8c4e6cfce44e4d9893714-1024x1024.jpg',\r\n            artist: 'Ian Ewing',\r\n            audio:'https://mp3.chillhop.com/serve.php/?mp3=8785',\r\n            color: ['#c85c5d','#302f64'],\r\n            id:uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: 'What Was Before',\r\n            cover:'https://chillhop.com/wp-content/uploads/2020/12/7e98d3028a22ee7f16f6a9bfcdc2089f089777a5-1024x1024.jpg',\r\n            artist: 'Philanthrope, Leavv',\r\n            audio:'https://mp3.chillhop.com/serve.php/?mp3=9923',\r\n            color: ['#335293','#ac6e7d'],\r\n            id:uuidv4(),\r\n            active: false,\r\n        }\r\n    ]\r\n}\r\n\r\nexport default chilllHop","import React, { useState, useRef } from \"react\";\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n\nimport \"./styles/App.scss\";\nimport data from \"./data\";\n\nfunction App() {\n  //Ref\n  const audioRef = useRef(null);\n\n  //State\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\n  //update time\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    //Calculate animationPercentage\n\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animationPercentage = Math.round(\n      (roundedCurrent / roundedDuration) * 100\n    );\n\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration: duration,\n      animationPercentage,\n    });\n  };\n\n  // END SONG (auto play next song when song ended)\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) audioRef.current.play();\n  };\n\n  return (\n    <div className={`App ${libraryStatus ? \"app-active\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n        audioRef={audioRef}\n        setIsPlaying={setIsPlaying}\n        isPlaying={isPlaying}\n        currentSong={currentSong}\n        setSongs={setSongs}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n      />\n      <Library\n        setSongs={setSongs}\n        isPlaying={isPlaying}\n        audioRef={audioRef}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        libraryStatus={libraryStatus}\n        setLibraryStatus={setLibraryStatus}\n      />\n      <audio\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './styles/App.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}